<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-12-08T15:55:01+03:00</updated><id>http://localhost:4000/</id><title type="html">Переводы, комиксы, разработка</title><subtitle>Мой личный блог, связанный с веб-разработкой. Где я публикую переводы понравившихся мне тематических статей, делюсь впечатлениями о прочитанных мною комиксах, и делюсь своим опытом.</subtitle><entry><title type="html">Перевод: сообщение об ошибках это антипаттерн</title><link href="http://localhost:4000/translation/2016/02/24/perevod-soobshhenie-ob-oshibkax-eto-antipattern.html" rel="alternate" type="text/html" title="Перевод: сообщение об ошибках это антипаттерн" /><published>2016-02-24T13:35:59+03:00</published><updated>2016-02-24T13:35:59+03:00</updated><id>http://localhost:4000/translation/2016/02/24/perevod-soobshhenie-ob-oshibkax-eto-antipattern</id><content type="html" xml:base="http://localhost:4000/translation/2016/02/24/perevod-soobshhenie-ob-oshibkax-eto-antipattern.html">&lt;p&gt;Когда вы проектируете интерактивную систему вы неизбежно сталкиваетесь с ограничениями. Например, не всегда достаточно того, чтобы просто добавить новое поле в уже существующую и работающую базу данных; мобильные сети не всегда обладают хорошими скоростями из-за низкой производительности либо высокой загруженности. Обычно команда проектировщиков принимает к сведению подобные ограничения и обсуждает с командой разработки компромиссный вариант того что команда может сделать в текущих условиях.&lt;/p&gt;

&lt;h3&gt;Не надо рассматривать пользователя как источник ошибок&lt;/h3&gt;
&lt;p&gt;Когда вы проектируете интерактивную систему вы неизбежно сталкиваетесь с ограничениями. Например, не всегда достаточно того, чтобы просто добавить новое поле в уже существующую и работающую базу данных; мобильные сети не всегда обладают хорошими скоростями из-за низкой производительности либо высокой загруженности. Обычно команда проектировщиков принимает к сведению подобные ограничения и обсуждает с командой разработки компромиссный вариант того что команда может сделать в текущих условиях.&lt;/p&gt;
&lt;p&gt;Но, если вы UX-профессионал, вы должны стремиться к тому, чтобы строить продукты прежде всего для удобства пользователя. В основе концепции юзер-ориентированного дизайна лежит понятие того, что пользователь это наше самое большое ресурсное ограничение — самый сложный для изменения компонент в нашей системе.&lt;/p&gt;
&lt;p&gt;Мы не должны приучать пользователей пользоваться нашей системой, вместо этого мы должны принимать их такими какие они есть. Поскольку остальная, кроме пользователя, часть системы у нас под полным контролем мы должны обеспечить максимально легкий и комфортный способ знакомства пользователя с системой. Следующие принципы должны служить нам напоминанием о том как следует проектировать системы для людей:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Никогда не запрашиваете у пользователя данные, которые могут быть получены системой автоматически.&lt;/li&gt;
&lt;li&gt;Никогда не заставляйте пользователя придерживаться формата удобного компьютеру на формах ввода, когда можно позволить пользователю вводить данные в человеческом формате, а затем парсить их в нужный системе вид.&lt;/li&gt;
&lt;li&gt;Избегайте указывать пользователю на его ошибки. Вместо этого поработайте над элементами интерфейса, потратьте время и ограничьте их так чтобы пользователь не смог ввести наверное значение. Нельзя обвинять пользователя в том что он не машина.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;предсказание появления ошибок и устойчивый к ошибкам дизайн&lt;/h3&gt;
&lt;p&gt;Немного общей теории:&lt;/p&gt;
&lt;p&gt;В общих чертах, интерактивные системы работают с ошибками следующим образом: после анализа данных переходят в режим ошибок и оповещают пользователя. Чтобы избежать критического эффекта, как, например, падение всей системы, при неверно введенных данных — система оповещает пользователя с помощью сообщения об ошибке.&lt;/p&gt;
&lt;p&gt;В общих чертах задачей устойчивого дизайна является построение надежной системы на основе множества менее надежных компонентов и подсистем. Например, в недрах огромных дата-центров жесткие диски ломаются по постоянно десятки раз в день, но из-за используемых там технологий распределения, эти события не являются опасными для целостности данных. Таким образом, сотрудники дата-центра могут поддерживать систему в полном рабочем состоянии при этом пользователь не заметит никаких проблем или потери своих данных. Подобный принцип построения устойчивых к ошибкам систем позволяет таким сервисам как Google, Facebook, Etsy, Flickr, Yahoo и Amazon работать постоянно и круглосуточно.&lt;/p&gt;
&lt;p&gt;Для Ux Дизайнера это означает что на практике нет универсальной защиты от ошибок. На любом уровне системы, компоненты, средства связи между компонентами да и сами данные могут поломаться. Важно понимать, что пользователь всегда опровергнет наши ожидания. Неважно каких действий мы ожидаем от пользователя — всегда найдется такой пользователь, который найдет новый и непредсказуемый способ использовать ваш продукт. Поэтому никогда не принуждайте пользователя идти одним-единственным путем. Вместо этого сосредоточьтесь на незапланированных возможных действиях пользователя, и способах реакции на них. Поведение пользователя не может быть ошибкой. Принимайте любое пользовательское действие с должным вниманием и реакцией на него.&lt;/p&gt;
&lt;h3&gt;Избегайте излишнего ввода данных&lt;/h3&gt;
&lt;p&gt;Проектирование традиционной простой формы ввода на сайте или веб-приложении — для меня является редкостью. Вместо этого, я использую модель «Немедленной Услужливости», согласно конкретной ситуации.&lt;/p&gt;
&lt;p&gt;Откройте несколько ваших любимых веб-приложений и посмотрите что они делают. Обычно они вам предлагают рекомендуемые варианты выше остальных в списке согласно вашим предпочтениям или частоте их использования. Чаще всего вы можете использовать эту концепцию и в своих разработках. Используйте как можно чаще те данные о пользователе, которые вы можете получить самостоятельно, неважно откуда: из кабинета пользователя, различных Open ID сервисов, анализа слежения за действиями пользователя в системе или же вашего ожидания возможных будущих действий.&lt;/p&gt;
&lt;p&gt;Мобильные гаджеты помогают нам облегчить труд, потому что они находятся постоянно рядом с пользователем где бы он ни находился. Поэтому вы всегда можете использовать данные от сенсоров мобильного устройства, например, геолокация, чтобы вытянуть максимальное количество информации о пользователе. Например, если пользователь ищет данные о погоде в своем регионе, необязательно его спрашивать где он находится, вместо этого вы можете сразу предложить ему данные согласно его текущему положению. см. рис. 1.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://www.uxmatters.com/mt/archives/2015/11/images/Hoober_Errors_Fig1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 0.8em; font-weight: bold;&quot;&gt;Рисунок 1 Weather Underground вебсайт во время первого посещения.&lt;/p&gt;
&lt;h3&gt;Автоматическое заполнение полей&lt;/h3&gt;
&lt;p&gt;Если вам нужно запросить простые данные, вы все еще можете пользоваться принципами, изложенными выше. Попробуйте пред-заполнить поля угадывая наиболее вероятные данные, позволив затем пользователю их изменить, в случае если они его не устроят. Например, рассматривая пример выше — может так оказаться что пользователь находится в путешествии и захочет узнать погоду места прибытия вместо текущего.&lt;/p&gt;
&lt;p&gt;Посмотрите еще раз на рисунок 1, и вы заметите, что, несмотря на пред-заполненные данные для текущего местоположения, тут есть большое и заметное поле «Search locations” наверху страницы, так же как и список популярных городов. Таким образом, посетители могут легко поменять их место-назначение на сайте.&lt;/p&gt;
&lt;p&gt;Даже если ваше предположение о данных для того или иного поля не основывается на поведении этого конкретного пользователя, а соответствует наиболее вероятному выбору для любого человека, это предположение зачастую намного лучше чем пустое поле. Некоторые пользователи не захотят вводить ничего, но чаще всего данные, которые вы покажете, послужат отличной контекстной подсказкой, тем самым боле эффективно поможет ввести пользователя в курс дела о принципах работы данной системы, что само по себе намного информативнее чем текст всплывающей подсказки.&lt;/p&gt;
&lt;h3&gt;Ограничение выбора&lt;/h3&gt;
&lt;p&gt;Наиболее часто встречающееся ошибка на веб-формах в интернете это сообщение о том что введенные данных выходят за границы разрешенных значений. Для примера возьмем типичное банковское приложение, которое предупреждает вас о том, что вы можете произвести транзакцию в пределах, скажем, от 20 $ и до $200. После того как вы запросили неверную сумму, программа просит вас вернуться на прежний шаг чтобы повторить транзакцию. Это, конечно, сделано из добрых намерений, но абсолютно не имеет под собой смысла, ведь можно не дать пользователю ввести сумму, выходящую за пределы границ транзакции.&lt;/p&gt;
&lt;p&gt;В общих чертах, вы должны избегать прямого неограниченного ввода значений, а также предоставить взамен возможность выбора из предложенных вариантов. Например, если вы в своем приложении даете возможность оставить напоминание, зачем показывать прошлые даты и выводить ошибку в случае, когда пользователь выбрал прошедшую дату? Вместо этого (см. рис 2) вы можете просто использовать специальный селектор, который позволит выбрать только будущие даты.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://www.uxmatters.com/mt/archives/2015/11/images/Hoober_Errors_Fig2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 0.8em; font-weight: bold;&quot;&gt;Рисунок 2 - Селектор мобильного приложения от сайта hotels.com.&lt;/p&gt;
&lt;p&gt;Как вы видите, используется сделанный вручную селектор, который показывает календарь на месяц, но прошлые даты неактивны и не доступны для выбора.&lt;/p&gt;
&lt;p&gt;Всегда думайте внимательно о тех данных, которые будут нужны вашему приложению, после чего выясняйте все вопросы ограничения данных с вашими разработчиками, чтобы избежать больших проблем и потери времени в дальнейшем, после запуска продукта.&lt;/p&gt;
&lt;h3&gt;Используйте поля стандартные для платформы пользователя&lt;/h3&gt;
&lt;p&gt;Часто в приложениях мы можем встретить такие поля, как &amp;lt;selectbox&amp;gt; у которых присутствует набор данных для выбора и возможность прямого ввода одновременно. Такой элемент интерфейса может быть полезен в случае больших объемов данных, когда скролл по множеству вариантов может смутить посетителя и замедлить скорость взаимодействия с ним. Но даже в таком случае можно избежать множества ошибок если просто отказывать пользователю во вводе значений выходящих за границы дозволенных значений. Например, если пользователь ввел значение выходящее за рамки, можно вместо этого значения подставлять максимальное либо минимальное значение из возможных - исходя из близости границы, за которую вышел пользователь.&lt;/p&gt;
&lt;p&gt;Важно осознавать что интерфейс десктопной версии вашего приложения не идеален и непостоянен для различных платформ. Известные стандартные элементы интерфейса такие как выпадающий список и радиопереключатели выглядят абсолютно по-другому на мобильных устройствах, поэтому вы должны быть знакомы со всем разнообразием того как будет выглядеть и функционировать ваш дизайн в различных браузерах на различных платформах.&lt;/p&gt;
&lt;p&gt;Нативные приложения сильно отличаются от веба. Пользователи достаточно быстро знакомятся с особенностями своей мобильной операционной системы и приходят в замешательство когда натыкаются на незнакомую для них парадигму пользовательского интерфейса. Например, iOS не использует в свое работе чекбоксы (checkbox) в стандартном своем виде совсем. Поэтому вы не должны их использовать в своем дизайне для этой ОС. Вместо этого, используйте родные для нее аналоги — уважайте OS.&lt;/p&gt;
&lt;p&gt;Рисунок 3 показывает пример приложения перегруженного различными элементами управления для одного и того же инпута. Несмотря на это, вы видите отличный пример всего разнообразия возможных элементов интерфейса, которые вы можете использовать в своих приложениях вместо простого прямого ввода.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://www.uxmatters.com/mt/archives/2015/11/images/Hoober_Errors_Fig3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 0.8em; font-weight: bold;&quot;&gt;Рисунок 3 пример перегруженного интерфейса приложения метронома&lt;/p&gt;
&lt;h3&gt;Пишите хорошие сообщения об ошибках.&lt;/h3&gt;
&lt;p&gt;Честно говоря, я все-таки вывожу иногда текст ошибки пользователю, чтобы показать, что что-то пошло не так. Мы не можем без этого обойтись из-за различного рода ошибок таких как отказ системы, обрыв связи и подобное. Следует понимать, что большинство сообщений об ошибках выводятся не по причине неверного действия пользователя, а в процессе обработки исключений системы. Поэтому я называю их не сообщения об ошибках, а сообщения об исключениях.&lt;/p&gt;
&lt;p&gt;Я вывел несколько правил написания сообщения об исключении:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Делаем сообщение заметным для человека.&lt;/li&gt;
&lt;li&gt;Не создавайте новых препятствий для пользователя, не отрывайте внимание пользователя от контекста страницы.&lt;/li&gt;
&lt;li&gt;Убедитесь что сообщение понятно.&lt;/li&gt;
&lt;li&gt;Помогите пользователю решить проблему.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Несмотря на то, что некоторые формы используют краткие контекстные сообщения, многие сайты и мобильные приложения до сих пор используют ужасные сообщения об ошибках. Несмотря на это можно найти и хороший пример - mailChimp (см. рис 4)&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://www.uxmatters.com/mt/archives/2015/11/images/Hoober_Errors_Fig4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 0.8em; font-weight: bold;&quot;&gt;Рисунок 4 : страница логина сервиса mailChimp до и после сообщения об ошибках.&lt;/p&gt;
&lt;p&gt;MailChimp следует правилам, описанным мной выше:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Они используют заметное сообщение, над контентом страницы, так что оно заметно что бы ни делал пользователь на странице.&lt;/li&gt;
&lt;li&gt;Сообщение находится на одной и той же странице что и форма, поэтому пользователь может легко подглядывать в этот текст пока решает проблему на форме.&lt;/li&gt;
&lt;li&gt;В сообщении используется понятная, не перегруженная, человеко-понятная терминология. Иконка в сообщении дает пользователю понять что он не сможет дальше работать с сервисом пока не уладит проблему.&lt;/li&gt;
&lt;li&gt;Они сами, вместо пользователя, обнаружили проблему и предложили пути решения. В данном случае это неправильный логин и ссылка по которой пользователь может решить эту проблему.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;итоги&lt;/h3&gt;
&lt;p&gt;Не подумайте что составление хороших сообщений об исключениях решит все ваши проблемы.&lt;/p&gt;
&lt;p&gt;Постарайтесь не обобщать предложенные мною решения и не использовать их строго как паттерн. Стараясь улучшить взаимодействия вашего пользователя с системой, также не забывайте о технических возможностях вашего конкретного проекта, используйте советы разумно, а не слепо применяйте все известные вам паттерны.&lt;/p&gt;
&lt;p&gt;Всегда помните что вы должны проектировать вашу интерактивную систему рассчитывая на то, что она должна будет работать всегда, независимо от того, каким неожиданным образом пользователь решит ей воспользоваться.&lt;/p&gt;
&lt;p&gt;Планируйте свою работу думая об отказах, погрешностях ввода, и неожиданном поведении пользователя.&lt;/p&gt;
&lt;p&gt;Проектируйте свои интерфейсы так, чтобы у пользователя не было возможности ввести неправильные данные. Также помните о том что прежде всего нужно думать об удобстве пользователя, а не о внедрении новомодных техник и паттернов.&lt;/p&gt;
&lt;p&gt;Данная заметка является моим вольным переводом &lt;a href=&quot;http://www.uxmatters.com/mt/archives/2015/11/error-messages-are-an-anti-pattern.php&quot; target=&quot;_blank&quot;&gt;оригинальной статьи Стивена Хубера&lt;/a&gt;, Там вы можете уточнить информацию.&lt;/p&gt;</content><author><name></name></author><summary type="html">Когда вы проектируете интерактивную систему вы неизбежно сталкиваетесь с ограничениями. Например, не всегда достаточно того, чтобы просто добавить новое поле в уже существующую и работающую базу данных; мобильные сети не всегда обладают хорошими скоростями из-за низкой производительности либо высокой загруженности. Обычно команда проектировщиков принимает к сведению подобные ограничения и обсуждает с командой разработки компромиссный вариант того что команда может сделать в текущих условиях.</summary></entry><entry><title type="html">Перевод: Подробное руководство по flexbox</title><link href="http://localhost:4000/translation/2015/09/05/podrobnoe-rukovodstvo-po-flexbox.html" rel="alternate" type="text/html" title="Перевод: Подробное руководство по flexbox" /><published>2015-09-05T13:35:59+03:00</published><updated>2015-09-05T13:35:59+03:00</updated><id>http://localhost:4000/translation/2015/09/05/podrobnoe-rukovodstvo-po-flexbox</id><content type="html" xml:base="http://localhost:4000/translation/2015/09/05/podrobnoe-rukovodstvo-po-flexbox.html">&lt;p&gt;Простыми словами, flexbox layout (флексбокс) это набор CSS правил описывающий принцип, который помогает разработчику удобно располагать блоки относительно друг друга и эффективнее использовать свободное место между блоками на странице.&lt;/p&gt;
&lt;p&gt;Использование flexbox решает старую наболевшую проблему — центрирование блоков по вертикали при неизвестной высоте как самих блоков, так и подложки под ними.&lt;/p&gt;
&lt;p&gt;Основная идея, стоящая за flexbox, это: способность родительского контейнера менять высоту/ширину (и порядок) своих дочерних элементов, для наиболее эффективного использования доступного пространства (также для того, чтобы подстраиваться под разрешение всех видов устройств и размеров экранов). Короче говоря, родительский флекс-контейнер расширяет внутренние блоки чтобы занять свободное пространство или же сжимает их чтобы избежать наложения их друг на друга.&lt;/p&gt;
&lt;p&gt;Самое важное во flexbox, это то, что этот принцип не зависит от общего направления отрисовки страницы и других блоков (display: block, которые следуют друг за другом вертикально и display: inline, которые располагаются горизонтально друг от друга). Старый принцип (block,inline,inline-block) работает отлично, но для простых страниц. Современные сложные динамические интерфейсы требуют более эффективный подход.&lt;/p&gt;
&lt;h2&gt;Терминология&lt;/h2&gt;
&lt;p&gt;Потому как flexbox Это отдельный принцип расположения блоков, а не просто CSS свойство, помимо прочего, он включает в себя целый набор свойств. Некоторые из этих свойств предназначены для применения на родительском контейнере (flex container) тогда как другие — на дочерних (flex items).&lt;/p&gt;
&lt;p&gt;Если обычный метод верстки строится на порядке следования отрисовки страницы, flex использует свой принцип для выстраивания порядка следования дочернихблоков (flex-flow directions).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Предлагаю взглянуть на изображение из спецификации и разобрать все термины по порядку.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Общая схема flexbox layout&lt;/h2&gt;
&lt;p&gt;&lt;img style=&quot;margin-left: auto; margin-right: auto;&quot; src=&quot;/assets/images/articles/flexbox/flexbox.png&quot; alt=&quot;Общая схема flexbox layout.&quot; /&gt;&lt;/p&gt;
&lt;p&gt;В общих чертах, можно сказать, что блоки внутри родительского контейнера будут располагаться по главной оси (main axis) от начала (main-start) до конца оси (main-end) или же по перпендикулярной оси (cross axis) от начала (cross-start) до конца оси (cross-end).&lt;/p&gt;
&lt;h3&gt;Термины на изображении&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;main axis&lt;/strong&gt; - главная ось по которой располагаются дочерние объекты. Кстати, совсем не обязательно это должна быть горизонтальная ось, это завсист от указанного вами flex-direction свойства (см.ниже).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;main-start | main-end &lt;/strong&gt; - дочерние блоки располагаются от main-start и до main-end. Фактически начало и конец оси.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;main size&lt;/strong&gt; - длина или ширина доступная для заполнения дочерними элементами вдоль главной оси.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cross axis&lt;/strong&gt; - ось, перпендикулярная главной оси. Направление перпендикулярной оси зависит от того, какую ось вы указали в качестве главной.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cross-start | cross-end&lt;/strong&gt; - начало и конец перпендикулярной оси, по которой будут располагаться дочерние элементы.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cross size&lt;/strong&gt;- длина или ширина доступная для заполнения дочерними элементами вдоль перпендикулярной оси.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;В итоге нас есть Родительский элемент (flex container), в котором расположены дочерние элементы (flex item) и набор правил для управления выводом этих элементов. Давайте последовательно разберем эти свойства.&lt;/p&gt;
&lt;h2&gt;Свойства родительского элемента (flex container)&lt;/h2&gt;
&lt;p&gt;&lt;img class=&quot;adaptive-image&quot; src=&quot;/assets/images/articles/flexbox/flex-container.png&quot; alt=&quot;flex container&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;display&lt;/h3&gt;
&lt;p&gt;Это свойство определяет родительский контейнер, так же оно активирует контекст для всех дочерних элементов&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/f453cd276e14126da57e.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;flex-direction&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;adaptive-image&quot; src=&quot;/assets/images/articles/flexbox/flex-direction1.png&quot; alt=&quot;flex container&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Это свойство определяет главную ось и направление расположения блоков вдоль нее. В общих чертах flexbox располагает блоки либо по горизонтали (row) либо по вертикали (column) вдоль оси.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/2d55e19fc0c9e8eb2d6e.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;row - (по умолчанию)&lt;/strong&gt; слева на право (ltr) либо справа на лево (rtl);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;row-reverse&lt;/strong&gt; - меняет порядок на противоположный;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;column&lt;/strong&gt; - тоже самое что и row но для направления сверху в низ;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;column-reverse&lt;/strong&gt; - меняет направление для вертикальной оси.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;flex-wrap&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;adaptive-image&quot; src=&quot;/assets/images/articles/flexbox/flex-wrap.png&quot; alt=&quot;flex container&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Это свойство определяет порядок переноса элементов. По умолчанию все дочерние элементы стремятся уместиться на одной линии по направлению главной оси.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/9805af0c0c85213d9789.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;nowrap &lt;/strong&gt;- (используется по умолчанию) расположение блоков в одну строку;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;wrap &lt;/strong&gt;- расположение в несколько линий (похоже на перенос по словам в письменной речи);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;wrap-reverse&lt;/strong&gt; - расположение в несколько линий только в обратном направлении главной оси.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;flex-flow&lt;/h3&gt;
&lt;p&gt;Это свойство является сокращением для комбинирования 2х свойств: flex-direction и flex-wrap. Оба этих свойства вместе определяют главную и перпендикулярную ось. По умолчанию используются значения row и nowrap соответсвенно.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/270d1b50730c4204054a.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;justify-content&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;adaptive-image&quot; src=&quot;/assets/images/articles/flexbox/justify-content.png&quot; alt=&quot;flex container&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Это свойство определяет расположение блоков вдоль главной оси. Это свойство помогает распределить свободное место оставшееся после рендеринга дочерних элементов. Так же это дает некоторою возможность для разработчика управлять поведением элементов при переполнении родительского контейнера.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/1c3af7d75d2b68c82a45.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;flex-start - (по умолчанию)&lt;/strong&gt; дочерние элементы группируются у стартовой лини (main-start на общей схеме) вдоль главной оси;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;flex-end&lt;/strong&gt; - дочерние элементы группируются у конечной линии (main-end на общей схеме) вдоль главной оси;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;center &lt;/strong&gt;- дочерние элементы центрированы по центру главной оси;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;space-between&lt;/strong&gt; - первый элемент на стартовой лини (main-start на общей схеме), последний на конечной линии(main-end на общей схеме), а свободное пространство распределяется равномерно между оставшимися элементами;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;space-around &lt;/strong&gt;- распределяет свободное место для всех дочерних элементов равномерно, но с учетом индивидуальных свойств отступов для дочерних элементов.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;align-items&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;adaptive-image&quot; src=&quot;/assets/images/articles/flexbox/align-items.png&quot; alt=&quot;flex container&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Это свойство определяет расположение дочерних элементов (flex items) относительно друг друга по перпендикулярной оси. Можно сказать что это свойство такое же как justify-content только для перпендикулярной оси. Чем то напоминает мне свойство vertical-align для inline-block элементов.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/d2e167834e211b29ecfe.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;flex-start&lt;/strong&gt; - начальная граница перпендикулярной оси (cross-start на общей схеме);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;flex-end&lt;/strong&gt; - конечная граница перпендикулярной оси (cross-end на общей схеме);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;center &lt;/strong&gt;- дочерние объекты располагаются относительно центра перпендикулярной оси;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;baseline&lt;/strong&gt; - элементы располагаются по базовой линии относительно друг друга;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;stretch&lt;/strong&gt; - (по умолчанию) элементы вытягиваются вдоль перпендикулярной оси и занимают все пространство родительского блока.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;align-content&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;adaptive-image&quot; src=&quot;/assets/images/articles/flexbox/align-content.png&quot; alt=&quot;flex container&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Это свойство выравнивает линии внутри родительского контейнера вдоль перпендикулярной оси (cross-axis на общей схеме), аналогично тому как работает свойство justify-content только не для отдельного элемента а для всей строки (линии) элементов сразу.&lt;/p&gt;
&lt;p&gt;Это свойство не работает если элементы не переносятся на другую строку.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/c21fd9007cd8ba306e95.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;flex-start &lt;/strong&gt;- линии группируются у стартовой позиции перпендикулярной оси контейнера;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;flex-end&lt;/strong&gt; - линии группируются у конечной позиции перпендикулярной оси;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;center&lt;/strong&gt; - линии группируются по центру перпендикулярной оси;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;space-between&lt;/strong&gt; - Первая линия элементов располагается у стартовой позиции оси а последняя у конечной. Линии между первой и последней распределяются равномерно между собой вдоль перпендикулярной оси;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;space-around&lt;/strong&gt; - линии равномерно распределены относительно друг друга вдоль перпендикулярной оси с равным расстоянием между друг другом;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;stretch&lt;/strong&gt; - линии равномерно расширяются чтобы занять все свободное пространство относительно перпендикулярной оси.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Свойства дочерних объектов (flex items)&lt;/h2&gt;
&lt;p&gt;&lt;img class=&quot;adaptive-image&quot; src=&quot;/assets/images/articles/flexbox/flex-items.png&quot; alt=&quot;flex container&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;order&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;adaptive-image&quot; src=&quot;/assets/images/articles/flexbox/order-2.png&quot; alt=&quot;flex container&quot; /&gt;&lt;/p&gt;
&lt;p&gt;По умолчанию дочерние объекты расположены в поредяке следования по исходному коду. Это свойство позволяет контролировать порядок отображение объектов относительно друг друга.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/2d51ef66a431361b17b2.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;flex-grow&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;adaptive-image&quot; src=&quot;/assets/images/articles/flexbox/flex-grow.png&quot; alt=&quot;flex container&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Это свойство определяет способность отдельных элементов расширятся при необходимости. Свойство является по сути пропорцией относительно других элементов.&lt;/p&gt;
&lt;p&gt;Если всем элементам задать значение 1 для этого свойства, каждый элемент будет одинаковой ширины, если же одному из этих элементов задать 2, то этот элемент будет в 2 раза шире остальных.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/570b361b19997c6d16ab.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;flex-shrink&lt;/h3&gt;
&lt;p&gt;Это свойство определяет способность элемента к расширению, так же является пропорцией к остальным элементам. По умолчанию равно 1.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/723a0fd8cdd981a5cbb6.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;flex-basis&lt;/h3&gt;
&lt;p&gt;Это свойство определяет размер элемента по умолчанию, перед тем как произойдет распределение свободного пространства между остальными элементами. Если указано свойство main-size то тогда flex-basis будет равно css свойствам height или width этого элемнта, в зависимости от того какая ось и направление активны.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/c749a81ea3a2ceba8f77.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;flex&lt;/h3&gt;
&lt;p&gt;Это свойство является комбинированным сокращением для свойств: flex-grow, flex-shrink и flex-basis. Второй и третий параметр ( flex-shrink и flex-basis) не обязательны. Значение этого свойства по умолчанию: 0 1 auto&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/b406879ce91dfc1529e4.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Рекомендуется использовать именно это свойство вместо использования отдельных flex-grow, flex-shrink и flex-basis.&lt;/p&gt;
&lt;h3&gt;align-self&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;adaptive-image&quot; src=&quot;/assets/images/articles/flexbox/align-self.png&quot; alt=&quot;flex container&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Это свойство позволяет индивидуально выравнивать конкретный выбранный элемент относительно других. Имеет приоритет над общим свойством align-items.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/6f3d1dd47ea57277d2d4.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Вот собственно и все.&lt;/p&gt;
&lt;p&gt;Данная заметка является моим вольным переводом &lt;a href=&quot;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&quot;&gt;оригинальной статьи Криса Койера&lt;/a&gt;, Там вы можете уточнить информацию а так же найти примеры использования, таблицу поддержки flexbox в различных браузерах и т.д.&lt;/p&gt;</content><author><name></name></author><summary type="html">Простыми словами, flexbox layout (флексбокс) это набор CSS правил описывающий принцип, который помогает разработчику удобно располагать блоки относительно друг друга и эффективнее использовать свободное место между блоками на странице. Использование flexbox решает старую наболевшую проблему — центрирование блоков по вертикали при неизвестной высоте как самих блоков, так и подложки под ними. Основная идея, стоящая за flexbox, это: способность родительского контейнера менять высоту/ширину (и порядок) своих дочерних элементов, для наиболее эффективного использования доступного пространства (также для того, чтобы подстраиваться под разрешение всех видов устройств и размеров экранов). Короче говоря, родительский флекс-контейнер расширяет внутренние блоки чтобы занять свободное пространство или же сжимает их чтобы избежать наложения их друг на друга. Самое важное во flexbox, это то, что этот принцип не зависит от общего направления отрисовки страницы и других блоков (display: block, которые следуют друг за другом вертикально и display: inline, которые располагаются горизонтально друг от друга). Старый принцип (block,inline,inline-block) работает отлично, но для простых страниц. Современные сложные динамические интерфейсы требуют более эффективный подход. Терминология Потому как flexbox Это отдельный принцип расположения блоков, а не просто CSS свойство, помимо прочего, он включает в себя целый набор свойств. Некоторые из этих свойств предназначены для применения на родительском контейнере (flex container) тогда как другие — на дочерних (flex items). Если обычный метод верстки строится на порядке следования отрисовки страницы, flex использует свой принцип для выстраивания порядка следования дочернихблоков (flex-flow directions). Предлагаю взглянуть на изображение из спецификации и разобрать все термины по порядку. Общая схема flexbox layout В общих чертах, можно сказать, что блоки внутри родительского контейнера будут располагаться по главной оси (main axis) от начала (main-start) до конца оси (main-end) или же по перпендикулярной оси (cross axis) от начала (cross-start) до конца оси (cross-end). Термины на изображении main axis - главная ось по которой располагаются дочерние объекты. Кстати, совсем не обязательно это должна быть горизонтальная ось, это завсист от указанного вами flex-direction свойства (см.ниже). main-start | main-end - дочерние блоки располагаются от main-start и до main-end. Фактически начало и конец оси. main size - длина или ширина доступная для заполнения дочерними элементами вдоль главной оси. cross axis - ось, перпендикулярная главной оси. Направление перпендикулярной оси зависит от того, какую ось вы указали в качестве главной. cross-start | cross-end - начало и конец перпендикулярной оси, по которой будут располагаться дочерние элементы. cross size- длина или ширина доступная для заполнения дочерними элементами вдоль перпендикулярной оси. В итоге нас есть Родительский элемент (flex container), в котором расположены дочерние элементы (flex item) и набор правил для управления выводом этих элементов. Давайте последовательно разберем эти свойства. Свойства родительского элемента (flex container) display Это свойство определяет родительский контейнер, так же оно активирует контекст для всех дочерних элементов flex-direction Это свойство определяет главную ось и направление расположения блоков вдоль нее. В общих чертах flexbox располагает блоки либо по горизонтали (row) либо по вертикали (column) вдоль оси. row - (по умолчанию) слева на право (ltr) либо справа на лево (rtl); row-reverse - меняет порядок на противоположный; column - тоже самое что и row но для направления сверху в низ; column-reverse - меняет направление для вертикальной оси. flex-wrap Это свойство определяет порядок переноса элементов. По умолчанию все дочерние элементы стремятся уместиться на одной линии по направлению главной оси. nowrap - (используется по умолчанию) расположение блоков в одну строку; wrap - расположение в несколько линий (похоже на перенос по словам в письменной речи); wrap-reverse - расположение в несколько линий только в обратном направлении главной оси. flex-flow Это свойство является сокращением для комбинирования 2х свойств: flex-direction и flex-wrap. Оба этих свойства вместе определяют главную и перпендикулярную ось. По умолчанию используются значения row и nowrap соответсвенно. justify-content Это свойство определяет расположение блоков вдоль главной оси. Это свойство помогает распределить свободное место оставшееся после рендеринга дочерних элементов. Так же это дает некоторою возможность для разработчика управлять поведением элементов при переполнении родительского контейнера. flex-start - (по умолчанию) дочерние элементы группируются у стартовой лини (main-start на общей схеме) вдоль главной оси; flex-end - дочерние элементы группируются у конечной линии (main-end на общей схеме) вдоль главной оси; center - дочерние элементы центрированы по центру главной оси; space-between - первый элемент на стартовой лини (main-start на общей схеме), последний на конечной линии(main-end на общей схеме), а свободное пространство распределяется равномерно между оставшимися элементами; space-around - распределяет свободное место для всех дочерних элементов равномерно, но с учетом индивидуальных свойств отступов для дочерних элементов. align-items Это свойство определяет расположение дочерних элементов (flex items) относительно друг друга по перпендикулярной оси. Можно сказать что это свойство такое же как justify-content только для перпендикулярной оси. Чем то напоминает мне свойство vertical-align для inline-block элементов. flex-start - начальная граница перпендикулярной оси (cross-start на общей схеме); flex-end - конечная граница перпендикулярной оси (cross-end на общей схеме); center - дочерние объекты располагаются относительно центра перпендикулярной оси; baseline - элементы располагаются по базовой линии относительно друг друга; stretch - (по умолчанию) элементы вытягиваются вдоль перпендикулярной оси и занимают все пространство родительского блока. align-content Это свойство выравнивает линии внутри родительского контейнера вдоль перпендикулярной оси (cross-axis на общей схеме), аналогично тому как работает свойство justify-content только не для отдельного элемента а для всей строки (линии) элементов сразу. Это свойство не работает если элементы не переносятся на другую строку. flex-start - линии группируются у стартовой позиции перпендикулярной оси контейнера; flex-end - линии группируются у конечной позиции перпендикулярной оси; center - линии группируются по центру перпендикулярной оси; space-between - Первая линия элементов располагается у стартовой позиции оси а последняя у конечной. Линии между первой и последней распределяются равномерно между собой вдоль перпендикулярной оси; space-around - линии равномерно распределены относительно друг друга вдоль перпендикулярной оси с равным расстоянием между друг другом; stretch - линии равномерно расширяются чтобы занять все свободное пространство относительно перпендикулярной оси. Свойства дочерних объектов (flex items) order По умолчанию дочерние объекты расположены в поредяке следования по исходному коду. Это свойство позволяет контролировать порядок отображение объектов относительно друг друга. flex-grow Это свойство определяет способность отдельных элементов расширятся при необходимости. Свойство является по сути пропорцией относительно других элементов. Если всем элементам задать значение 1 для этого свойства, каждый элемент будет одинаковой ширины, если же одному из этих элементов задать 2, то этот элемент будет в 2 раза шире остальных. flex-shrink Это свойство определяет способность элемента к расширению, так же является пропорцией к остальным элементам. По умолчанию равно 1. flex-basis Это свойство определяет размер элемента по умолчанию, перед тем как произойдет распределение свободного пространства между остальными элементами. Если указано свойство main-size то тогда flex-basis будет равно css свойствам height или width этого элемнта, в зависимости от того какая ось и направление активны. flex Это свойство является комбинированным сокращением для свойств: flex-grow, flex-shrink и flex-basis. Второй и третий параметр ( flex-shrink и flex-basis) не обязательны. Значение этого свойства по умолчанию: 0 1 auto Рекомендуется использовать именно это свойство вместо использования отдельных flex-grow, flex-shrink и flex-basis. align-self Это свойство позволяет индивидуально выравнивать конкретный выбранный элемент относительно других. Имеет приоритет над общим свойством align-items. Вот собственно и все. Данная заметка является моим вольным переводом оригинальной статьи Криса Койера, Там вы можете уточнить информацию а так же найти примеры использования, таблицу поддержки flexbox в различных браузерах и т.д.</summary></entry><entry><title type="html">Комиксы: Preacher</title><link href="http://localhost:4000/comics/2015/01/12/komiksyi-obzor-preacher.html" rel="alternate" type="text/html" title="Комиксы: Preacher" /><published>2015-01-12T13:35:59+03:00</published><updated>2015-01-12T13:35:59+03:00</updated><id>http://localhost:4000/comics/2015/01/12/komiksyi-obzor-preacher</id><content type="html" xml:base="http://localhost:4000/comics/2015/01/12/komiksyi-obzor-preacher.html">&lt;p&gt;Серия Preacher для меня 2-я после Hellboy, любимая серия. Жанрово это остросюжетная смесь из городского фэнтези, мистики, хоррора и вестерна. Описать это сложно, это надо видеть своими глазами. Серия отличается очень сильной атмосферой, настолько сильной, что начав с первого выпуска, приходишь в себя уже на 15 - м только потому, что затекла спина)) и пора вставать на работу. Тут всё на высоте: визуальная составляющая, сюжетная, мораль и философский посыл серии.&lt;/p&gt;
&lt;p&gt;На страницах Preacher чего вы только не увидите, есть и ангелы, и демоны, и каннибалы, и фашисты, и вампиры.&lt;/p&gt;
&lt;p&gt;Традиционно сюжет раскрывать не буду, дабы не портить вам впечатление от прочтения.&lt;/p&gt;
&lt;p&gt;Назвать это комиксом язык не поворачивается, это полноценный графический роман. Все 66 выпусков связаны единым сюжетом и читать их следует один за одним по порядку.&lt;/p&gt;
&lt;p&gt;Комикс однозначно 21+, и не только из откровенных сцен насилия, а хотя бы из-за вопросов, которые поднимаются на страницах серии.&lt;/p&gt;
&lt;p&gt;Сюжет полон действия, запутанных сюжетных линий, раскрытия и развития характеров персонажей. Причем персонажи настолько хорошо проработаны что вызывают сильнейшую эмоциональную привязку, и очень жалко терять некоторых персонажей по ходу сюжета. Даже самый последний мерзейший злодей настолько шикарен и харизматичен что можно про каждого спокойно делать спин-оффы.&lt;/p&gt;
&lt;p&gt;В общем, все серьезно, комикс —культовый и является 2-м по важности для компании DC Comics после серии The sandman.&lt;/p&gt;
&lt;p&gt;Не тяните время - читайте.&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/preacher/pr (8).jpg&quot; alt=&quot;скрин комикса sandman&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/preacher/pr (1).jpg&quot; alt=&quot;скрин комикса sandman&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/preacher/pr (2).jpg&quot; alt=&quot;скрин комикса sandman&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/preacher/pr (3).jpg&quot; alt=&quot;скрин комикса sandman&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/preacher/pr (4).jpg&quot; alt=&quot;скрин комикса sandman&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/preacher/pr (5).jpg&quot; alt=&quot;скрин комикса sandman&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/preacher/pr (6).jpg&quot; alt=&quot;скрин комикса sandman&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/preacher/pr (7).jpg&quot; alt=&quot;скрин комикса sandman&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;btn btn-success&quot; href=&quot;https://yadi.sk/d/_3i4OmH6dunJF&quot; rel=&quot;nofollow&quot;&gt;Скачать The Preacher на русском&lt;/a&gt; &lt;/p&gt;</content><author><name></name></author><summary type="html">Серия Preacher для меня 2-я после Hellboy, любимая серия. Жанрово это остросюжетная смесь из городского фэнтези, мистики, хоррора и вестерна. Описать это сложно, это надо видеть своими глазами. Серия отличается очень сильной атмосферой, настолько сильной, что начав с первого выпуска, приходишь в себя уже на 15 - м только потому, что затекла спина)) и пора вставать на работу. Тут всё на высоте: визуальная составляющая, сюжетная, мораль и философский посыл серии. На страницах Preacher чего вы только не увидите, есть и ангелы, и демоны, и каннибалы, и фашисты, и вампиры. Традиционно сюжет раскрывать не буду, дабы не портить вам впечатление от прочтения. Назвать это комиксом язык не поворачивается, это полноценный графический роман. Все 66 выпусков связаны единым сюжетом и читать их следует один за одним по порядку. Комикс однозначно 21+, и не только из откровенных сцен насилия, а хотя бы из-за вопросов, которые поднимаются на страницах серии. Сюжет полон действия, запутанных сюжетных линий, раскрытия и развития характеров персонажей. Причем персонажи настолько хорошо проработаны что вызывают сильнейшую эмоциональную привязку, и очень жалко терять некоторых персонажей по ходу сюжета. Даже самый последний мерзейший злодей настолько шикарен и харизматичен что можно про каждого спокойно делать спин-оффы. В общем, все серьезно, комикс —культовый и является 2-м по важности для компании DC Comics после серии The sandman. Не тяните время - читайте. Скачать The Preacher на русском </summary></entry><entry><title type="html">Разработка: Подборка полезных функций javascript</title><link href="http://localhost:4000/webdev/2014/10/28/my-gists.html" rel="alternate" type="text/html" title="Разработка: Подборка полезных функций javascript" /><published>2014-10-28T13:35:59+03:00</published><updated>2014-10-28T13:35:59+03:00</updated><id>http://localhost:4000/webdev/2014/10/28/my-gists</id><content type="html" xml:base="http://localhost:4000/webdev/2014/10/28/my-gists.html">&lt;p&gt;За последний год у меня накопилось достаточно много интересных решений различных микрозадач веб-разработки. Все интересные решения и приемы, которые я нахожу в сети или «изобретаю» сам, я храню на gist.github.com. Я решил что будет полезно сделать краткий обзор собственных «гистов» как, собственно, для консолидации своих знаний ,так и для того, чтобы вам не пришлось изобретать велосипеды. Итак по порядку…&lt;/p&gt;
&lt;h2&gt;1. Javascript: Реакция на изменение ширины браузера&lt;/h2&gt;
&lt;p&gt;Кроссбраузерный способ обработки события изменения окна браузера. Использую для перетасовки блоков верстки, как элемент адаптивного дизайна.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/8135376.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;2. Javascript: iOS, or not iOS: that is the question… (Определить iOS)&lt;/h2&gt;
&lt;p&gt;Простой и быстрый способ узнать зашел ли к вам на сайт человек с iPad или iPhone.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/8254820.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;3. Javascript: Определить платформу мобильного устройства пользователя.&lt;/h2&gt;
&lt;p&gt;Простой и легкий способ определить с какого смартфона к вам на сайт зашел пользователь, узнать тип операционной системы &lt;span style=&quot;line-height: 1.5em;&quot;&gt;посетителя сайта.&lt;/span&gt;&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/8956416.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;4. Javascript, HTML: специальные символы валют.&lt;/h2&gt;
&lt;p&gt;HTML спецсимволы валют различных стран мира.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/9346600.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;5. Javascript, JQuery: Скролл окна к элементу на странице&lt;/h2&gt;
&lt;p&gt;Кроссбраузерный способ реализации кнопки “На верх”, для вашего сайта.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/9464486.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;6. Git: .gitignore файл для проектов на MODx Revo&lt;/h2&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/9856498.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;7. Javascript, JQuery: как получить значение inline свойства style элемента.&lt;/h2&gt;
&lt;p&gt;Способ узнать css свойство динамически генерированного объекта, все свойства которого зашиты в атрибут style, прямо в самом теге.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/349f363bfc90963eb317.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;8. Javascript: Структура ( скелет) модуля на javascript&lt;/h2&gt;
&lt;p&gt;Способ реализации модульной архитектуры вашего веб приложения.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/11c69551298290365a8c.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;9. Javascript, JQuery: как перезагрузить iframe на странице&lt;/h2&gt;
&lt;p&gt;Несколько способов программно перезагрузить содержимое iframe контейнера на странице.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/6289dfc666cc13ee3800.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;10. CSS: Пример адекватной тени под блоком и текстом&lt;/h2&gt;
&lt;p&gt;Тень в меру размашистая, идеально полупрозрачная.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/231c48b2e702a3e20743.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;11. JavaScript: Конвертация данных формы в javascrpt объект&lt;/h2&gt;
&lt;p&gt;Сначала форма проходит сериализацию, затем сформированная строка запроса конвертируется в js объект&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/018cb4f312780c7b1e0d.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;12. JavaScript: Спрятать элемент, если пользователь кликнул мышью ввне его области&lt;/h2&gt;
&lt;p&gt;Например нам нужно прятать модальное окно, после того как пользователь щелкнул вне этого окна. ПРи этом, если клик по области внутри окна, то все оставить как есть&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/7230f0fbf96b5fdeea18.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;13. Jquery. 2-й способ реализации принципа - скрыть элемент по клику на внешней области&lt;/h2&gt;
&lt;p&gt;Этот способ значительно короче, но менее гибкий нежели предыдущий&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/3e81400f21bc24ccd370.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;14. CSS: плавная анимация элемента при наведении средствами css&lt;/h2&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/1953221118688ceb840f.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;15. Задать классы элементам управления google maps&lt;/h2&gt;
&lt;p&gt;Элементы управления на карте по умолчанию не поддаются стилизации, потому как не содержат уникальных классов либо идентификаторов. Данный хак распознает эти элементы и &quot;именует&quot; их, для того, чтобы разработчик смог в дальнейшем управлять их отображением через css файлы&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/491a92fbd9999539e3ac.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;16. CSS:Получить значение CSS свойства без величины 'px'&lt;/h2&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/62ab3264c6b2e3253e77.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;17. JavaScript: Что делать если input вызывает действие click 2 раза&lt;/h2&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/9e94486833a922bc6710.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;18. JavaScript: Получить длину объекта, аналог Array.length&lt;/h2&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/f8666fc1580cbb91c00f.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;19. JavaScript: Переименовать свойство объекта&lt;/h2&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/a2e16a704061d44201ac.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;20. LESS: Быстрый способ задания фона html елемента&lt;/h2&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/1688df8383e3925f7400.js&quot;&gt;&lt;/script&gt;</content><author><name></name></author><summary type="html">За последний год у меня накопилось достаточно много интересных решений различных микрозадач веб-разработки. Все интересные решения и приемы, которые я нахожу в сети или «изобретаю» сам, я храню на gist.github.com. Я решил что будет полезно сделать краткий обзор собственных «гистов» как, собственно, для консолидации своих знаний ,так и для того, чтобы вам не пришлось изобретать велосипеды. Итак по порядку… 1. Javascript: Реакция на изменение ширины браузера Кроссбраузерный способ обработки события изменения окна браузера. Использую для перетасовки блоков верстки, как элемент адаптивного дизайна. 2. Javascript: iOS, or not iOS: that is the question… (Определить iOS) Простой и быстрый способ узнать зашел ли к вам на сайт человек с iPad или iPhone. 3. Javascript: Определить платформу мобильного устройства пользователя. Простой и легкий способ определить с какого смартфона к вам на сайт зашел пользователь, узнать тип операционной системы посетителя сайта. 4. Javascript, HTML: специальные символы валют. HTML спецсимволы валют различных стран мира. 5. Javascript, JQuery: Скролл окна к элементу на странице Кроссбраузерный способ реализации кнопки “На верх”, для вашего сайта. 6. Git: .gitignore файл для проектов на MODx Revo 7. Javascript, JQuery: как получить значение inline свойства style элемента. Способ узнать css свойство динамически генерированного объекта, все свойства которого зашиты в атрибут style, прямо в самом теге. 8. Javascript: Структура ( скелет) модуля на javascript Способ реализации модульной архитектуры вашего веб приложения. 9. Javascript, JQuery: как перезагрузить iframe на странице Несколько способов программно перезагрузить содержимое iframe контейнера на странице. 10. CSS: Пример адекватной тени под блоком и текстом Тень в меру размашистая, идеально полупрозрачная. 11. JavaScript: Конвертация данных формы в javascrpt объект Сначала форма проходит сериализацию, затем сформированная строка запроса конвертируется в js объект 12. JavaScript: Спрятать элемент, если пользователь кликнул мышью ввне его области Например нам нужно прятать модальное окно, после того как пользователь щелкнул вне этого окна. ПРи этом, если клик по области внутри окна, то все оставить как есть 13. Jquery. 2-й способ реализации принципа - скрыть элемент по клику на внешней области Этот способ значительно короче, но менее гибкий нежели предыдущий 14. CSS: плавная анимация элемента при наведении средствами css 15. Задать классы элементам управления google maps Элементы управления на карте по умолчанию не поддаются стилизации, потому как не содержат уникальных классов либо идентификаторов. Данный хак распознает эти элементы и &quot;именует&quot; их, для того, чтобы разработчик смог в дальнейшем управлять их отображением через css файлы 16. CSS:Получить значение CSS свойства без величины 'px' 17. JavaScript: Что делать если input вызывает действие click 2 раза 18. JavaScript: Получить длину объекта, аналог Array.length 19. JavaScript: Переименовать свойство объекта 20. LESS: Быстрый способ задания фона html елемента</summary></entry><entry><title type="html">Комиксы: Sandman</title><link href="http://localhost:4000/comics/2014/10/26/sandman-na-russkom-yazyike.html" rel="alternate" type="text/html" title="Комиксы: Sandman" /><published>2014-10-26T13:35:59+03:00</published><updated>2014-10-26T13:35:59+03:00</updated><id>http://localhost:4000/comics/2014/10/26/sandman-na-russkom-yazyike</id><content type="html" xml:base="http://localhost:4000/comics/2014/10/26/sandman-na-russkom-yazyike.html">&lt;p&gt;Sandman это не просто комикс, это целая вселенная, со своими законами, жителями, событиями атмосферой. Серия неоднократный победитель различных конкурсов и обладатель премий. Девятнадцатый выпуск Sandman первый и единственный комикс удостоенный награды World Fantasy Award. Скажу я, что все эти награды совсем не зря, совсем… Однозначный must have для всех любителей не только комиксов, в частности, но, и фантастики в общем.&lt;/p&gt;
&lt;p&gt;Сюжет раскрывать не буду, скажу лишь что чтиво не из легких. Комикс мрачный, пропитан особой атмосферой, в которой абсурд переплетается с философским подтекстом, строятся различные психотропные ситуации. Местами автор экспериментирует над читателем, вынуждая, как бы это сказать, испытывать некоторые резкие эмоции. То есть само повествование, местами, не несет в себе вообще никакой смысловой нагрузки, но при этом подача настолько шокирует, что кожа покрывается мурашками.&lt;/p&gt;
&lt;p&gt;Для тех кто незнаком с творчеством Нила Геймана, сразу предупреждаю что он очень любит маргинальных персонажей. Проститутки, наркоманы, представители нетрадиционной сексуальной ориентации, бомжи, извращенцы, и прочая грязь постоянно используется автором, он их вставляет везде.&lt;/p&gt;
&lt;p&gt;Перевод любительский, взят из открытых источников, предназначен для ознакомления. Я не призываю скачивать пиратские сканы и переводы. Тут вопрос доступности: на русский переведена не вся серия до сих пор, да и первые тома уже непросто найти.&lt;/p&gt;
&lt;p&gt;Сам я недавно нашел и купил сборник «Смерть» (Спин-офф от sandman), в твердом переплете от издательства «Комикс-Арт», отчего доволен как слонище. Были бы доступны тома песочного человека, по возможности бы купил и их. А вообще, пора бы уже давно продавать электронные версии.&lt;/p&gt;
&lt;p&gt;Кстати, именно наличие неофициальных переводов в сети, должно быть выгодно для издательства, иначе никто бы и не знал о том, что есть такие замечательные вещи.&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/sandman/Sandman-01-01.jpg&quot; alt=&quot;скрин комикса sandman&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/sandman/Sandman%2006-18.jpg&quot; alt=&quot;Скрин комикса Sandman&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/sandman/Sandman18-06-A-Dream-of-A-Thousand-Cats.jpg&quot; alt=&quot;Скрин комикса Песочный человек&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/sandman/09.jpg&quot; alt=&quot;Скрин комикса Sandman&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/sandman/Sandman_32_p17.jpg&quot; alt=&quot;Скрин комикса Песочный человек&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/sandman/Sandman-033-12.jpg&quot; alt=&quot;Скрин комикса Песочный человек&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/sandman/Sandman%20060-08.jpg&quot; alt=&quot;Скрин комикса Песочный человек&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/sandman/Sandman%20062-16.jpg&quot; alt=&quot;Скрин комикса Песочный человек&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;btn btn-success&quot; href=&quot;https://yadi.sk/d/d9VJqmhGZr2Rv&quot; rel=&quot;nofollow&quot;&gt;Скачать The Sandman на русском&lt;/a&gt; &lt;/p&gt;</content><author><name></name></author><summary type="html">Sandman это не просто комикс, это целая вселенная, со своими законами, жителями, событиями атмосферой. Серия неоднократный победитель различных конкурсов и обладатель премий. Девятнадцатый выпуск Sandman первый и единственный комикс удостоенный награды World Fantasy Award. Скажу я, что все эти награды совсем не зря, совсем… Однозначный must have для всех любителей не только комиксов, в частности, но, и фантастики в общем. Сюжет раскрывать не буду, скажу лишь что чтиво не из легких. Комикс мрачный, пропитан особой атмосферой, в которой абсурд переплетается с философским подтекстом, строятся различные психотропные ситуации. Местами автор экспериментирует над читателем, вынуждая, как бы это сказать, испытывать некоторые резкие эмоции. То есть само повествование, местами, не несет в себе вообще никакой смысловой нагрузки, но при этом подача настолько шокирует, что кожа покрывается мурашками. Для тех кто незнаком с творчеством Нила Геймана, сразу предупреждаю что он очень любит маргинальных персонажей. Проститутки, наркоманы, представители нетрадиционной сексуальной ориентации, бомжи, извращенцы, и прочая грязь постоянно используется автором, он их вставляет везде. Перевод любительский, взят из открытых источников, предназначен для ознакомления. Я не призываю скачивать пиратские сканы и переводы. Тут вопрос доступности: на русский переведена не вся серия до сих пор, да и первые тома уже непросто найти. Сам я недавно нашел и купил сборник «Смерть» (Спин-офф от sandman), в твердом переплете от издательства «Комикс-Арт», отчего доволен как слонище. Были бы доступны тома песочного человека, по возможности бы купил и их. А вообще, пора бы уже давно продавать электронные версии. Кстати, именно наличие неофициальных переводов в сети, должно быть выгодно для издательства, иначе никто бы и не знал о том, что есть такие замечательные вещи. Скачать The Sandman на русском </summary></entry><entry><title type="html">Комиксы: Hellboy</title><link href="http://localhost:4000/comics/2014/08/17/comics-hellboy.html" rel="alternate" type="text/html" title="Комиксы: Hellboy" /><published>2014-08-17T13:35:59+03:00</published><updated>2014-08-17T13:35:59+03:00</updated><id>http://localhost:4000/comics/2014/08/17/comics-hellboy</id><content type="html" xml:base="http://localhost:4000/comics/2014/08/17/comics-hellboy.html">&lt;p&gt;Это мой любимый персонаж. Сразу хочу сказать что персонаж именно комикс-вселенной. Фильмы и мультики лично мне совсем не нравятся. Hellboy из комиксов сильно отличается от Хелбоя на экране, как и сюжетно, так и характером персонажей. Комикс определённо для взрослой аудитории, он мрачен, умен и эстетически выверен и проработан до мелочей. У комикса, в отличие от аналогов, сильная сюжетная база, основанная на фольклоре различных народов, начиная от английских сказочных персонажей и заканчивая японской мифологией. Да что там говорить, в комиксе присутствует Баба-яга, на деревянных ногах, которая летает в ступе.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Сюжет пересказывать особого смысла нету, дабы не портить вам впечатление и не вызывать ложных ожиданий. Я поступлю лучше. Я поделюсь с вами ссылкой на полную историю Хелбоя в русском переводе. Перевод любительский, взят из открытых источников, предназначен для ознакомления. Я сейчас потихоньку выкупаю официальные издания от замечательного издательства “42”. Видеть творчество Миньолы на бумаге дорогого стоит. Кстати, именно наличие неофициальных переводов в сети, должно быть выгодно для издательства, иначе никто бы и не знал о том, что есть такие замечательные вещи.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/comics_hellboy/pict1.jpg&quot; alt=&quot;&quot; width=&quot;900&quot; height=&quot;1384&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/comics_hellboy/pict2.jpg&quot; alt=&quot;&quot; width=&quot;1280&quot; height=&quot;1024&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/comics_hellboy/pict3.jpg&quot; alt=&quot;&quot; width=&quot;880&quot; height=&quot;1338&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;display: block; width: 100%; height: auto; margin-bottom: 2em;&quot; src=&quot;/assets/images/articles/comics_hellboy/pict4.jpg&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;1800&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;btn btn-success&quot; href=&quot;https://yadi.sk/d/mPLvChzKZoRuL&quot; rel=&quot;nofollow&quot;&gt;Скачать hellboy на русском&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Это мой любимый персонаж. Сразу хочу сказать что персонаж именно комикс-вселенной. Фильмы и мультики лично мне совсем не нравятся. Hellboy из комиксов сильно отличается от Хелбоя на экране, как и сюжетно, так и характером персонажей. Комикс определённо для взрослой аудитории, он мрачен, умен и эстетически выверен и проработан до мелочей. У комикса, в отличие от аналогов, сильная сюжетная база, основанная на фольклоре различных народов, начиная от английских сказочных персонажей и заканчивая японской мифологией. Да что там говорить, в комиксе присутствует Баба-яга, на деревянных ногах, которая летает в ступе. Сюжет пересказывать особого смысла нету, дабы не портить вам впечатление и не вызывать ложных ожиданий. Я поступлю лучше. Я поделюсь с вами ссылкой на полную историю Хелбоя в русском переводе. Перевод любительский, взят из открытых источников, предназначен для ознакомления. Я сейчас потихоньку выкупаю официальные издания от замечательного издательства “42”. Видеть творчество Миньолы на бумаге дорогого стоит. Кстати, именно наличие неофициальных переводов в сети, должно быть выгодно для издательства, иначе никто бы и не знал о том, что есть такие замечательные вещи.   Скачать hellboy на русском</summary></entry><entry><title type="html">Разработка: Таблица размера шрифтов</title><link href="http://localhost:4000/webdev/2014/01/07/tablicza-razmera-shriftov-px-em.html" rel="alternate" type="text/html" title="Разработка: Таблица размера шрифтов" /><published>2014-01-07T13:35:59+03:00</published><updated>2014-01-07T13:35:59+03:00</updated><id>http://localhost:4000/webdev/2014/01/07/tablicza-razmera-shriftov-px-em</id><content type="html" xml:base="http://localhost:4000/webdev/2014/01/07/tablicza-razmera-shriftov-px-em.html">&lt;p&gt;В своих работах, я стараюсь размер шрифтов прописывать в em. Очевидная выгода этого подхода — возможность быстро и удобно менять размер текста сразу для множества элементов. Изменив значение величины текста в родительском элементе, автоматически поменяются размеры шрифта во всех дочерних контейнерах, причем  все надписи будут смотреться гармонично.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;У этого подхода есть один недостаток: для каждого дочернего элемента страницы приходится заново рассчитывать размер согласно пропорции: (искомый размер/размер родительского). Причем если размер основного текста отличается от стандартного для современных браузеров (16px), то, для соответствия макету, надо заново все пересчитывать.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;На практике дизайнеры обычно используют шрифты от 13px до 18px для основного текста. Для того чтобы избавиться от этого рутинного пересчета я подготовил таблицу соответствия размера в px  для размера в em, начиная от 13px для основного текста, и заканчивая &lt;/span&gt;&lt;span&gt;18px&lt;/span&gt;&lt;span&gt;. Как это таблицей пользоваться? Ее можно распечатать и держать под рукой во время верстки, либо копировать значения прямо с этой страницы и вам не придется каждый раз пользоваться калькулятором.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/7703990.js&quot;&gt;&lt;/script&gt;</content><author><name></name></author><summary type="html">В своих работах, я стараюсь размер шрифтов прописывать в em. Очевидная выгода этого подхода — возможность быстро и удобно менять размер текста сразу для множества элементов. Изменив значение величины текста в родительском элементе, автоматически поменяются размеры шрифта во всех дочерних контейнерах, причем  все надписи будут смотреться гармонично. У этого подхода есть один недостаток: для каждого дочернего элемента страницы приходится заново рассчитывать размер согласно пропорции: (искомый размер/размер родительского). Причем если размер основного текста отличается от стандартного для современных браузеров (16px), то, для соответствия макету, надо заново все пересчитывать. На практике дизайнеры обычно используют шрифты от 13px до 18px для основного текста. Для того чтобы избавиться от этого рутинного пересчета я подготовил таблицу соответствия размера в px  для размера в em, начиная от 13px для основного текста, и заканчивая 18px. Как это таблицей пользоваться? Ее можно распечатать и держать под рукой во время верстки, либо копировать значения прямо с этой страницы и вам не придется каждый раз пользоваться калькулятором.</summary></entry><entry><title type="html">Разработка: Таблица группировки шрифтов в CSS</title><link href="http://localhost:4000/webdev/2013/11/29/gruppyi-shriftov.html" rel="alternate" type="text/html" title="Разработка: Таблица группировки шрифтов в CSS" /><published>2013-11-29T13:35:59+03:00</published><updated>2013-11-29T13:35:59+03:00</updated><id>http://localhost:4000/webdev/2013/11/29/gruppyi-shriftov</id><content type="html" xml:base="http://localhost:4000/webdev/2013/11/29/gruppyi-shriftov.html">&lt;p&gt;В наше время существует множество шрифтов в различных форматах, годных для встраивания на страницу, причем бесплатно. Существуют специальные хостинги шрифтов, благодаря которым встроить нужный шрифт занимает от силы две-три минуты. Причем сам процесс интеграции такого шрифта, немногим сложнее чем сменить статус в социальной сети.&lt;/p&gt;
&lt;p&gt;Тем не менее даже сейчас&lt;strong&gt; нельзя просто так взять и указать один шрифт для элемента страницы&lt;/strong&gt;. Всегда необходимо продумывать связку шрифтов. Причин для этого достаточно много начиная от того, что браузер клиента может не поддерживать форматы веб-шрифтов (хотя, это маловероятно в современном мире) и заканчивая вопросами кросс-браузерного отображения (подмена шрифта отсутствующего в системе аналогичным по начертанию).&lt;/p&gt;
&lt;p&gt;Для того чтобы постоянно не держать в голове сходные шрифты, я пользуюсь специальной таблицей которую нашел несколько лет назад в вебе. Беру на себя труд перевести ее и дополнить своими соображениями специально для вас, читателей моего блога. Ссылочка на оригинал будет в самом конце статьи.&lt;/p&gt;
&lt;div class=&quot;clearfix&quot;&gt; &lt;/div&gt;
&lt;table class=&quot;table table-striped&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;th&gt;Шрифт&lt;/th&gt;&lt;th&gt;...&lt;/th&gt;&lt;th&gt;Информация&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img style=&quot;height: 39px; width: 140px;&quot; src=&quot;/assets/images/articles/fonts_guide/helveticaRegular.png&quot; alt=&quot;Helvetica Regular&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/mac-logo.png&quot; alt=&quot;Macintosh&quot; /&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Широко используемый шрифт без засечек, разработанный в 1957 швейцарским проектировщиком шрифта Максом Мидинджером и Эдуардом Хоффманом. Шрифт идет в комплекте шрифтов для Mac OS.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;font-family: Helvetica, 'Helvetica Neue' 'Arial Narrow', sans-serif;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img style=&quot;height: 27px; width: 140px;&quot; src=&quot;/assets/images/articles/fonts_guide/helveticaNeueMedium.png&quot; alt=&quot;Helvetica Neue &quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/mac-logo.png&quot; alt=&quot;Macintosh&quot; /&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Широко используемый на Mac Os и iOS шрифт без засечек, разработанный в 1983 проектировщиком шрифта Вольфгангом Шимпфом и Райнхардом Хаусом. Шрифт идет в комплекте шрифтов для Mac OS.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;font-family: 'Helvetica Neue Medium', Helvetica, 'Arial Narrow', sans-serif;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/arial.gif&quot; alt=&quot;Arial&quot; width=&quot;47&quot; height=&quot;19&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/ie-logo.png&quot; alt=&quot;MS Internet Explorer&quot; /&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;На мой взгляд самый популярный шрифт без засечек, прямой конкурент для Helvetica.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;font-family: Arial, Helvetica, sans-serif;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img style=&quot;width: 140px; height: 18px;&quot; src=&quot;/assets/images/articles/fonts_guide/arialblack.gif&quot; alt=&quot;Arial Black&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/ie-logo.png&quot; alt=&quot;MS Internet Explorer&quot; /&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Менее популярен нежели Arial.Не используйте его с font-weight:bold; Этот шрифт сам по себе достаточно жирный!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;font-family: &quot;Arial Black&quot;, Arial, sans-serif;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img style=&quot;width: 140px; height: 19px;&quot; src=&quot;/assets/images/articles/fonts_guide/comicsans.gif&quot; alt=&quot;FontName&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/ie-logo.png&quot; alt=&quot;MS Internet Explorer&quot; /&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Для этого шрифта очень сложно подобрать аналог, а главное, нужно ли его использовать вообще...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;font-family: &quot;Comic Sans MS&quot;, cursive;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/courier.gif&quot; alt=&quot;Courier (Mac scalable)&quot; width=&quot;101&quot; height=&quot;17&quot; /&gt; &lt;br /&gt; &lt;img style=&quot;width: 81px; height: 13px;&quot; src=&quot;/assets/images/articles/fonts_guide/couriernew.png&quot; alt=&quot;Courier New&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/mac-logo.png&quot; alt=&quot;Macintosh&quot; /&gt; &lt;br /&gt; &lt;img src=&quot;/assets/images/articles/fonts_guide/ms-logo.png&quot; alt=&quot;Windows&quot; width=&quot;38&quot; height=&quot;30&quot; align=&quot;middle&quot; /&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Шрифт, имитирующий стиль печатной машинки. В наше время полностью устарел и встречается редко. Рекомендуется использовать «Courier New».&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;font-family: &quot;Courier New&quot;, Courier, monospace;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/geneva.gif&quot; alt=&quot;Geneva&quot; width=&quot;83&quot; height=&quot;20&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/mac-logo.png&quot; alt=&quot;Macintosh&quot; /&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Древний шрифт, предок Helvetica. Интересен в качестве музейного экспоната.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;font-family: Geneva, &quot;MS Sans Serif&quot;, sans-serif;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/georgia.gif&quot; alt=&quot;Georgia&quot; width=&quot;82&quot; height=&quot;24&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/ie-logo.png&quot; alt=&quot;MS Internet Explorer&quot; /&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Шрифт с засечками. Разработан в Microsoft для использования в интернете. Рассчитан на четкое и читаемое отображение в малом размере. Очень похож на Times New Roman.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;font-family: Georgia, Times New Roman, serif;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;!-- MS SANS SERIF --&gt;
&lt;td&gt;&lt;img style=&quot;width: 140px; height: 16px;&quot; src=&quot;/assets/images/articles/fonts_guide/mssansserif.gif&quot; alt=&quot;MS Sans Serif&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/ms-logo.png&quot; alt=&quot;Windows&quot; width=&quot;38&quot; height=&quot;30&quot; align=&quot;middle&quot; /&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Системный шрифт MS Windows, использовался для диалоговых окон, системных сообщений и т. д.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;font-family: &quot;MS Sans Serif&quot;, Geneva, sans-serif;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/terminal9.gif&quot; alt=&quot;Terminal (9 pt.)&quot; width=&quot;63&quot; height=&quot;9&quot; /&gt; &lt;br /&gt; &lt;img src=&quot;/assets/images/articles/fonts_guide/terminal12.gif&quot; alt=&quot;Terminal (12 pt.)&quot; width=&quot;91&quot; height=&quot;14&quot; /&gt; &lt;br /&gt; &lt;img src=&quot;/assets/images/articles/fonts_guide/terminal14.gif&quot; alt=&quot;Terminal (14 pt.)&quot; width=&quot;77&quot; height=&quot;14&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/ms-logo.png&quot; alt=&quot;Windows&quot; width=&quot;38&quot; height=&quot;30&quot; align=&quot;middle&quot; /&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Немасштабируемый, моноширинный системный шрифт DOS или интерфейса командной строки.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;font-family: Terminal, monospace;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img style=&quot;width: 140px; height: 15px;&quot; src=&quot;/assets/images/articles/fonts_guide/timesnewroman.gif&quot; alt=&quot;Times New Roman&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/ie-logo.png&quot; alt=&quot;MS Internet Explorer&quot; /&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Это — безусловно наиболее распространенный шрифт в Сети. Являлся шрифтом по умолчанию в большинстве браузеров.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;font-family: &quot;Times New Roman&quot;, Times, serif;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/verdana.gif&quot; alt=&quot;Verdana&quot; width=&quot;97&quot; height=&quot;20&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/assets/images/articles/fonts_guide/ie-logo.png&quot; alt=&quot;MS Internet Explorer&quot; /&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Возможно, самый удобочитаемый из шрифтов без засечек, разработанный в Microsoft для использования на экране. Однако, Verdana не должен использоваться бок о бок со схожими шрифтами того же размера, потому что Verdana зрительно кажется больше по размеру.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;font-family: Verdana, Arial, Helvetica, sans-serif;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Текст переведен, доработан и подчищен от устаревшей информации, Оригинал находится &lt;a href=&quot;http://www.angelfire.com/al4/rcollins/style/fonts.html&quot; target=&quot;_blank&quot;&gt;тут&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Желаю удачи во всех начинаниях.&lt;/p&gt;
&lt;p class=&quot;postovoy&quot;&gt;Советую &lt;a href=&quot;http://com.uanic.name/&quot; target=&quot;_blank&quot;&gt;Надежный хостинг и регистратор доменных имен&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">В наше время существует множество шрифтов в различных форматах, годных для встраивания на страницу, причем бесплатно. Существуют специальные хостинги шрифтов, благодаря которым встроить нужный шрифт занимает от силы две-три минуты. Причем сам процесс интеграции такого шрифта, немногим сложнее чем сменить статус в социальной сети. Тем не менее даже сейчас нельзя просто так взять и указать один шрифт для элемента страницы. Всегда необходимо продумывать связку шрифтов. Причин для этого достаточно много начиная от того, что браузер клиента может не поддерживать форматы веб-шрифтов (хотя, это маловероятно в современном мире) и заканчивая вопросами кросс-браузерного отображения (подмена шрифта отсутствующего в системе аналогичным по начертанию). Для того чтобы постоянно не держать в голове сходные шрифты, я пользуюсь специальной таблицей которую нашел несколько лет назад в вебе. Беру на себя труд перевести ее и дополнить своими соображениями специально для вас, читателей моего блога. Ссылочка на оригинал будет в самом конце статьи.   Шрифт...Информация Широко используемый шрифт без засечек, разработанный в 1957 швейцарским проектировщиком шрифта Максом Мидинджером и Эдуардом Хоффманом. Шрифт идет в комплекте шрифтов для Mac OS. font-family: Helvetica, 'Helvetica Neue' 'Arial Narrow', sans-serif; Широко используемый на Mac Os и iOS шрифт без засечек, разработанный в 1983 проектировщиком шрифта Вольфгангом Шимпфом и Райнхардом Хаусом. Шрифт идет в комплекте шрифтов для Mac OS. font-family: 'Helvetica Neue Medium', Helvetica, 'Arial Narrow', sans-serif; На мой взгляд самый популярный шрифт без засечек, прямой конкурент для Helvetica. font-family: Arial, Helvetica, sans-serif; Менее популярен нежели Arial.Не используйте его с font-weight:bold; Этот шрифт сам по себе достаточно жирный! font-family: &quot;Arial Black&quot;, Arial, sans-serif; Для этого шрифта очень сложно подобрать аналог, а главное, нужно ли его использовать вообще... font-family: &quot;Comic Sans MS&quot;, cursive; Шрифт, имитирующий стиль печатной машинки. В наше время полностью устарел и встречается редко. Рекомендуется использовать «Courier New». font-family: &quot;Courier New&quot;, Courier, monospace; Древний шрифт, предок Helvetica. Интересен в качестве музейного экспоната. font-family: Geneva, &quot;MS Sans Serif&quot;, sans-serif; Шрифт с засечками. Разработан в Microsoft для использования в интернете. Рассчитан на четкое и читаемое отображение в малом размере. Очень похож на Times New Roman. font-family: Georgia, Times New Roman, serif; Системный шрифт MS Windows, использовался для диалоговых окон, системных сообщений и т. д. font-family: &quot;MS Sans Serif&quot;, Geneva, sans-serif; Немасштабируемый, моноширинный системный шрифт DOS или интерфейса командной строки. font-family: Terminal, monospace; Это — безусловно наиболее распространенный шрифт в Сети. Являлся шрифтом по умолчанию в большинстве браузеров. font-family: &quot;Times New Roman&quot;, Times, serif; Возможно, самый удобочитаемый из шрифтов без засечек, разработанный в Microsoft для использования на экране. Однако, Verdana не должен использоваться бок о бок со схожими шрифтами того же размера, потому что Verdana зрительно кажется больше по размеру. font-family: Verdana, Arial, Helvetica, sans-serif; Текст переведен, доработан и подчищен от устаревшей информации, Оригинал находится тут Желаю удачи во всех начинаниях. Советую Надежный хостинг и регистратор доменных имен</summary></entry><entry><title type="html">Разработка: Проверка на адапитивность</title><link href="http://localhost:4000/webdev/2013/08/13/proverka-na-adaptivnost.html" rel="alternate" type="text/html" title="Разработка: Проверка на адапитивность" /><published>2013-08-13T13:35:59+03:00</published><updated>2013-08-13T13:35:59+03:00</updated><id>http://localhost:4000/webdev/2013/08/13/proverka-na-adaptivnost</id><content type="html" xml:base="http://localhost:4000/webdev/2013/08/13/proverka-na-adaptivnost.html">&lt;p&gt;Наткнулся на удобный и миленький сервис для тружеников на ниве адаптивной верстки. Суть этого сервиса проста и гениальна: Вводишь url страницы, и он показывает отображение этой страницы в различных устройствах от компании Apple, причем в очень “вкусном” виде. По сути, подгружает ваш урл в различных разрешениях и подставляет содержимое в красивую рамку.&lt;/p&gt;
&lt;p&gt;Технически, указанный вами урл, подгружается в несколько &amp;lt;iframe&amp;gt; различной величины. Все очень просто, и это дает возможность поиграться загруженной версткой и даже видеть динамику, что, конечно же, гораздо лучше статичной картинки, которую вы вышлете клиенту по почте. Сервис дает вам специальную ссылку, которую можно давать заказчику, который увидит именно то, что вами задумано.&lt;/p&gt;
&lt;p&gt;Сервис не годится для полноценного тестинга, зато он отлично подходит для презентации отличий адаптивного дизайна. Да и чего греха таить, я полчаса игрался с этим сервисом, подставляя как результат своих трудов, так и сторонние, известные мне ресурсы.&lt;/p&gt;
&lt;p&gt;Описывать интерфейс не имеет смысла, попробуйте сами эту прелесть.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://ami.responsivedesign.is/&quot; target=&quot;_blank&quot;&gt;http://ami.responsivedesign.is/&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Наткнулся на удобный и миленький сервис для тружеников на ниве адаптивной верстки. Суть этого сервиса проста и гениальна: Вводишь url страницы, и он показывает отображение этой страницы в различных устройствах от компании Apple, причем в очень “вкусном” виде. По сути, подгружает ваш урл в различных разрешениях и подставляет содержимое в красивую рамку. Технически, указанный вами урл, подгружается в несколько &amp;lt;iframe&amp;gt; различной величины. Все очень просто, и это дает возможность поиграться загруженной версткой и даже видеть динамику, что, конечно же, гораздо лучше статичной картинки, которую вы вышлете клиенту по почте. Сервис дает вам специальную ссылку, которую можно давать заказчику, который увидит именно то, что вами задумано. Сервис не годится для полноценного тестинга, зато он отлично подходит для презентации отличий адаптивного дизайна. Да и чего греха таить, я полчаса игрался с этим сервисом, подставляя как результат своих трудов, так и сторонние, известные мне ресурсы. Описывать интерфейс не имеет смысла, попробуйте сами эту прелесть. http://ami.responsivedesign.is/</summary></entry><entry><title type="html">Восстановить пароль к базе mySQL для различных CMS (2012 год)</title><link href="http://localhost:4000/webdev/2012/03/30/vosstanovit-parol-k-baze-mysql.html" rel="alternate" type="text/html" title="Восстановить пароль к базе mySQL для различных CMS (2012 год)" /><published>2012-03-30T13:35:59+03:00</published><updated>2012-03-30T13:35:59+03:00</updated><id>http://localhost:4000/webdev/2012/03/30/vosstanovit-parol-k-baze-mysql</id><content type="html" xml:base="http://localhost:4000/webdev/2012/03/30/vosstanovit-parol-k-baze-mysql.html">&lt;p&gt;По долгу своих рабочих обязанностей мне было нужно устанавливать cms wordpress в отдельную папку в корневую директорию на хостинге множества клиентов. Основная проблема в особенностях отдельного хостинг-провайдера: у каждого свои настройки, свои правила и условия. Задача усложняется еще и тем, что зачастую общение происходит с заказчиком, который не разбирается в тонкостях устройства своего сайта и теряется при разговоре с отделом ведения и получить от него необходимые реквизиты сложно. Хорошо если клиент даст доступ &quot;от FTP&quot;, настоятельно требовать от него реквизиты базы данных его сервера не этично, да и не выгодно: Клиент всегда может уйти к другим, которые будут задавать меньше вопросов.&lt;/p&gt;
&lt;p&gt;Методом проб и ошибок я выработал для себя несколько простых приемов, а конкретнее - я нашел в каком месте “лежат” параметры подключения к базе у различных популярных cms. В моей копилке знаний присутствуют такие системы как: &lt;strong&gt;Yii PHP Framework, CMS Prestashop,&lt;/strong&gt; &lt;strong&gt;Wordpress&lt;/strong&gt;, &lt;strong&gt;MODx-CMS&lt;/strong&gt;, &lt;strong&gt;Joomla&lt;/strong&gt;, &lt;strong&gt;Drupal&lt;/strong&gt;, &lt;strong&gt;CMS Made Simple&lt;/strong&gt;, &lt;strong&gt;PHPShop&lt;/strong&gt;, &lt;strong&gt;Data Life Engine (DLE)&lt;/strong&gt;, &lt;strong&gt;Bitrix CMS, Astra.CMS&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Если вы забыли или потеряли доступы (логин и пароль) к базе данных mySQL или надо восстановить пароль в админку, то с помощью этих приемов сможешь выцепить необходимую информацию. &lt;br /&gt;И так всё по порядку, как говорится от простого к сложному.&lt;/p&gt;
&lt;h3&gt;Yii PHP Framework: 2.0&lt;/h3&gt;
&lt;p&gt;В корневой директории проекта, файл &lt;strong&gt;/.env&lt;/strong&gt; , в котором следующие строки:&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/1d5edec1211e86da234f.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;СMS Prestashop 1.6&lt;/h3&gt;
&lt;p&gt;Вам нужен файл: &lt;strong&gt;/config/settings.inc.php&lt;/strong&gt;. В котором строки:&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/61c10d6c66f18935cb99.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt; Для CMS Wordpress:&lt;/h3&gt;
&lt;p class=&quot;tip-wrap&quot;&gt;Тут все просто: в корне сайта лежит файлик &quot; &lt;strong&gt;wp-config.php&lt;/strong&gt;&quot;. Там ты найдешь следующие строки:&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/7704066.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;Для CMS Joomla 1.5 - 3:&lt;/h3&gt;
&lt;p class=&quot;tip-wrap&quot;&gt;В корне сайта лежит файл &quot; &lt;strong&gt;configuration.php&lt;/strong&gt;&quot;. Там нас интересуют следующие строки:&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/7704088.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;Для CMS Drupal:&lt;/h3&gt;
&lt;p class=&quot;tip-wrap&quot;&gt;В директории &quot; &lt;strong&gt;/sites/default/&lt;/strong&gt;&quot; файл &quot; &lt;strong&gt;settings.php&lt;/strong&gt;&quot;. В этом файле данные по mysql находятся в формате &quot;connection string&quot;, нас интересует следующая строка вида:&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/7704111.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;Для CMS  MODX(Revolutoin) :&lt;/h3&gt;
&lt;p class=&quot;tip-wrap&quot;&gt;Доступы к базе находятся в /core/config/config.inc.php, в следующем формате:&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/9034780.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;Для CMS  MODX(EVO) :&lt;/h3&gt;
&lt;p class=&quot;tip-wrap&quot;&gt;Тут тебе нужен файл &quot; &lt;strong&gt;config.inc.php&lt;/strong&gt;&quot; в директории &quot; &lt;strong&gt;/manager/includes/&lt;/strong&gt;&quot; , находишь следующие строки:&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/7704146.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;Доступы для  Bitrix CMS&lt;/h3&gt;
&lt;p class=&quot;tip-wrap&quot;&gt;Битрикс хранит свои настройки базы данных в файле &quot; &lt;strong&gt;dbconn.php&lt;/strong&gt;&quot; в директории &quot; &lt;strong&gt;/bitrix/php_interface/&lt;/strong&gt;&quot;. Ищем строки типа:&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/7704166.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;Доступы для Shift CMS&lt;/h3&gt;
&lt;p class=&quot;tip-wrap&quot;&gt;Доступы к базе данных прописаны в файле include/config/set.inc.php&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/9034520.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;У CMS Made Simple&lt;/h3&gt;
&lt;p class=&quot;tip-wrap&quot;&gt;Прямо в корне сайта лежит файл &quot; &lt;strong&gt;config.php&lt;/strong&gt;&quot;, в котором тебе будут нужны строки:&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/7704178.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;Для CMS PHPShop&lt;/h3&gt;
&lt;p class=&quot;tip-wrap&quot;&gt;Отредактируй файл связи с базой MySQL &quot; &lt;strong&gt;config.ini&lt;/strong&gt;&quot;, лежащий в папке &quot; &lt;strong&gt;/phpshop/inc/&lt;/strong&gt;”&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/7704188.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt; CMS Data Life Engine (DLE)&lt;/h3&gt;
&lt;p class=&quot;tip-wrap&quot;&gt;Тебе нужен файл &quot; &lt;strong&gt;dbconfig.php&lt;/strong&gt;&quot; в директории “ &lt;strong&gt;/engine/data/&lt;/strong&gt;”. &lt;br /&gt;Следующие строки:&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/7704197.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;Astra.CMS&lt;/h3&gt;
&lt;p&gt;В корне сайта лежит файл &quot; &lt;strong&gt;config.php&quot;,&lt;/strong&gt;в котором, тебе нужна строка:&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://gist.github.com/handleman/7704213.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Не стоит даже упомниать что в кавычках будут другие данные специфичные для вашего случая, а не “твой текст”. На этом всё. Если кто-нибудь работал с другими CMS и сталкивался с подобной ситуацией, не поленитесь оставить комментарий, и я добавлю его в статью. Надеюсь, был полезен.  &lt;/p&gt;</content><author><name></name></author><summary type="html">По долгу своих рабочих обязанностей мне было нужно устанавливать cms wordpress в отдельную папку в корневую директорию на хостинге множества клиентов. Основная проблема в особенностях отдельного хостинг-провайдера: у каждого свои настройки, свои правила и условия. Задача усложняется еще и тем, что зачастую общение происходит с заказчиком, который не разбирается в тонкостях устройства своего сайта и теряется при разговоре с отделом ведения и получить от него необходимые реквизиты сложно. Хорошо если клиент даст доступ &quot;от FTP&quot;, настоятельно требовать от него реквизиты базы данных его сервера не этично, да и не выгодно: Клиент всегда может уйти к другим, которые будут задавать меньше вопросов. Методом проб и ошибок я выработал для себя несколько простых приемов, а конкретнее - я нашел в каком месте “лежат” параметры подключения к базе у различных популярных cms. В моей копилке знаний присутствуют такие системы как: Yii PHP Framework, CMS Prestashop, Wordpress, MODx-CMS, Joomla, Drupal, CMS Made Simple, PHPShop, Data Life Engine (DLE), Bitrix CMS, Astra.CMS. Если вы забыли или потеряли доступы (логин и пароль) к базе данных mySQL или надо восстановить пароль в админку, то с помощью этих приемов сможешь выцепить необходимую информацию. И так всё по порядку, как говорится от простого к сложному. Yii PHP Framework: 2.0 В корневой директории проекта, файл /.env , в котором следующие строки: СMS Prestashop 1.6 Вам нужен файл: /config/settings.inc.php. В котором строки:  Для CMS Wordpress: Тут все просто: в корне сайта лежит файлик &quot; wp-config.php&quot;. Там ты найдешь следующие строки: Для CMS Joomla 1.5 - 3: В корне сайта лежит файл &quot; configuration.php&quot;. Там нас интересуют следующие строки: Для CMS Drupal: В директории &quot; /sites/default/&quot; файл &quot; settings.php&quot;. В этом файле данные по mysql находятся в формате &quot;connection string&quot;, нас интересует следующая строка вида: Для CMS  MODX(Revolutoin) : Доступы к базе находятся в /core/config/config.inc.php, в следующем формате: Для CMS  MODX(EVO) : Тут тебе нужен файл &quot; config.inc.php&quot; в директории &quot; /manager/includes/&quot; , находишь следующие строки: Доступы для  Bitrix CMS Битрикс хранит свои настройки базы данных в файле &quot; dbconn.php&quot; в директории &quot; /bitrix/php_interface/&quot;. Ищем строки типа: Доступы для Shift CMS Доступы к базе данных прописаны в файле include/config/set.inc.php У CMS Made Simple Прямо в корне сайта лежит файл &quot; config.php&quot;, в котором тебе будут нужны строки: Для CMS PHPShop Отредактируй файл связи с базой MySQL &quot; config.ini&quot;, лежащий в папке &quot; /phpshop/inc/”  CMS Data Life Engine (DLE) Тебе нужен файл &quot; dbconfig.php&quot; в директории “ /engine/data/”. Следующие строки: Astra.CMS В корне сайта лежит файл &quot; config.php&quot;,в котором, тебе нужна строка: Не стоит даже упомниать что в кавычках будут другие данные специфичные для вашего случая, а не “твой текст”. На этом всё. Если кто-нибудь работал с другими CMS и сталкивался с подобной ситуацией, не поленитесь оставить комментарий, и я добавлю его в статью. Надеюсь, был полезен.  </summary></entry></feed>